{
  "mcpServers": {
    "flux": {
      "command": "/opt/homebrew/bin/node",
      "args": [
        "/Users/speed/Documents/Cline/MCP/flux-server/build/index.js"
      ],
      "env": {
        "FLUX_PATH": "/Users/speed/CascadeProjects/flux",
        "BFL_API_KEY": "47932f45-9b3d-4283-b525-92cca5a54f28",
        "VIRTUAL_ENV": "/Users/speed/CascadeProjects/flux/.venv",
        "PATH": "/Users/speed/CascadeProjects/flux/.venv/bin:/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",
        "PYTHONPATH": "/Users/speed/CascadeProjects/flux"
      },
      "disabled": false,
      "autoApprove": [],
      "tools": {
        "generate": {
          "description": "Generate an image from a text prompt",
          "parameters": [
            {
              "name": "prompt",
              "type": "string",
              "description": "Text prompt for image generation",
              "required": true
            },
            {
              "name": "aspect_ratio",
              "type": "string",
              "description": "Aspect ratio of the output image (1:1, 4:3, 3:4, 16:9, 9:16)",
              "required": false
            },
            {
              "name": "model",
              "type": "string",
              "description": "Model to use for generation",
              "required": false
            },
            {
              "name": "output",
              "type": "string",
              "description": "Output filename",
              "required": false
            }
          ]
        },
        "img2img": {
          "description": "Generate an image using another image as reference",
          "parameters": [
            {
              "name": "image",
              "type": "string",
              "description": "Input image path",
              "required": true
            },
            {
              "name": "prompt",
              "type": "string",
              "description": "Text prompt for generation",
              "required": true
            },
            {
              "name": "name",
              "type": "string",
              "description": "Name for the generation",
              "required": true
            },
            {
              "name": "strength",
              "type": "number",
              "description": "Generation strength",
              "required": false
            }
          ]
        }
      }
    },
    "dart": {
      "command": "/opt/homebrew/bin/node",
      "args": ["/Users/speed/Documents/Cline/MCP/dart-mcp-server/build/index.js"],
      "env": {
        "PATH": "/Users/speed/Documents/Cline/MCP/dart-mcp-server/.venv/bin:/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",
        "PYTHONUNBUFFERED": "1",
        "VIRTUAL_ENV": "/Users/speed/Documents/Cline/MCP/dart-mcp-server/.venv"
      },
      "autoApprove": ["create_task", "get_default_space", "get_default_status", "update_task", "get_dartboards", "get_folders", "create_folder", "create_doc", "create_space", "delete_space"],
      "tools": {
        "create_task": {
          "description": "Create a new task",
          "parameters": [
            {
              "name": "title",
              "type": "string",
              "description": "Task title",
              "required": true
            },
            {
              "name": "description",
              "type": "string",
              "description": "Task description",
              "required": true
            },
            {
              "name": "dartboard_duid",
              "type": "string",
              "description": "Dartboard DUID",
              "required": true
            },
            {
              "name": "priority",
              "type": "string",
              "description": "Priority of the task",
              "required": false
            },
            {
              "name": "tags",
              "type": "array",
              "description": "Tags for the task",
              "required": false
            },
            {
              "name": "size",
              "type": "number",
              "description": "Size/complexity of the task (1-5)",
              "required": false
            },
            {
              "name": "assignee_duids",
              "type": "array",
              "description": "List of assignee DUIDs",
              "required": false
            },
            {
              "name": "subscriber_duids",
              "type": "array",
              "description": "List of subscriber DUIDs",
              "required": false
            }
          ]
        },
        "update_task": {
          "description": "Update an existing task",
          "parameters": [
            {
              "name": "duid",
              "type": "string",
              "description": "DUID of the task to update",
              "required": true
            },
            {
              "name": "status_duid",
              "type": "string",
              "description": "New status DUID",
              "required": false
            },
            {
              "name": "title",
              "type": "string",
              "description": "New title for the task",
              "required": false
            },
            {
              "name": "description",
              "type": "string",
              "description": "New description for the task",
              "required": false
            },
            {
              "name": "priority",
              "type": "string",
              "description": "New priority for the task",
              "required": false
            }
          ]
        },
        "get_default_space": {
          "description": "Get the default space DUID",
          "parameters": [
            {
              "name": "dartboard_duid",
              "type": "string",
              "description": "Dartboard DUID",
              "required": true
            }
          ]
        },
        "get_default_status": {
          "description": "Get the default status DUIDs",
          "parameters": [
            {
              "name": "dartboard_duid",
              "type": "string",
              "description": "Dartboard DUID",
              "required": true
            }
          ]
        },
        "get_dartboards": {
          "description": "Get available dartboards",
          "parameters": [
            {
              "name": "space_duid",
              "type": "string",
              "description": "Space DUID to get dartboards from",
              "required": true
            }
          ]
        },
        "get_folders": {
          "description": "Get available folders",
          "parameters": [
            {
              "name": "space_duid",
              "type": "string",
              "description": "Space DUID to get folders from",
              "required": true
            }
          ]
        },
        "create_folder": {
          "description": "Create a new folder in a space",
          "parameters": [
            {
              "name": "space_duid",
              "type": "string",
              "description": "Space DUID to create the folder in",
              "required": true
            },
            {
              "name": "title",
              "type": "string",
              "description": "Title of the folder",
              "required": true
            },
            {
              "name": "description",
              "type": "string",
              "description": "Description of the folder",
              "required": false
            },
            {
              "name": "kind",
              "type": "string",
              "description": "Kind of folder",
              "required": false
            }
          ]
        },
        "create_doc": {
          "description": "Create a new document or report",
          "parameters": [
            {
              "name": "folder_duid",
              "type": "string",
              "description": "Folder DUID to create the document in",
              "required": true
            },
            {
              "name": "title",
              "type": "string",
              "description": "Title of the document",
              "required": true
            },
            {
              "name": "text",
              "type": "string",
              "description": "Content of the document",
              "required": false
            },
            {
              "name": "text_markdown",
              "type": "string",
              "description": "Markdown content of the document",
              "required": false
            },
            {
              "name": "report_kind",
              "type": "string",
              "description": "Kind of report (if creating a report)",
              "required": false
            },
            {
              "name": "editor_duids",
              "type": "array",
              "description": "List of editor DUIDs",
              "required": false
            },
            {
              "name": "subscriber_duids",
              "type": "array",
              "description": "List of subscriber DUIDs",
              "required": false
            }
          ]
        },
        "create_space": {
          "description": "Create a new space",
          "parameters": [
            {
              "name": "title",
              "type": "string",
              "description": "Title of the space",
              "required": true
            },
            {
              "name": "description",
              "type": "string",
              "description": "Description of the space",
              "required": false
            },
            {
              "name": "abrev",
              "type": "string",
              "description": "Short abbreviation for the space",
              "required": false
            },
            {
              "name": "accessible_by_team",
              "type": "boolean",
              "description": "Whether the space is accessible by the whole team",
              "required": false
            },
            {
              "name": "accessible_by_user_duids",
              "type": "array",
              "description": "List of user DUIDs who can access the space",
              "required": false
            },
            {
              "name": "icon_kind",
              "type": "string",
              "description": "Kind of icon to use",
              "required": false
            },
            {
              "name": "icon_name_or_emoji",
              "type": "string",
              "description": "Icon name or emoji character",
              "required": false
            },
            {
              "name": "color_hex",
              "type": "string",
              "description": "Color in hex format (e.g. #FF0000)",
              "required": false
            },
            {
              "name": "sprint_mode",
              "type": "string",
              "description": "Sprint mode for the space",
              "required": false
            },
            {
              "name": "sprint_replicate_on_rollover",
              "type": "boolean",
              "description": "Whether to replicate sprints on rollover",
              "required": false
            },
            {
              "name": "sprint_name_fmt",
              "type": "string",
              "description": "Sprint name format",
              "required": false
            }
          ]
        },
        "delete_space": {
          "description": "Delete a space and all its contents",
          "parameters": [
            {
              "name": "space_duid",
              "type": "string",
              "description": "DUID of the space to delete",
              "required": true
            }
          ]
        }
      }
    },
    "discord": {
      "command": "node",
      "args": ["/Users/speed/discordmcp/build/index.js"],
      "env": {
        "DISCORD_TOKEN": "your_token_here"
      },
      "tools": {
        "send_message": {
          "description": "Send a message to a Discord channel",
          "parameters": [
            {
              "name": "channel",
              "type": "string",
              "description": "Channel name",
              "required": true
            },
            {
              "name": "content",
              "type": "string",
              "description": "Message content",
              "required": true
            }
          ]
        }
      }
    },
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/Users/speed/Documents",
        "/Users/speed/Pictures/flux-generations",
        "/Users/speed/Downloads"
      ],
      "tools": {
        "list_files": {
          "description": "List files in a directory",
          "parameters": [
            {
              "name": "path",
              "type": "string",
              "description": "Directory path",
              "required": true
            }
          ]
        }
      }
    }
  }
} 